version: '3.8'

services:
  crawler_service:
    build:
      context: .
      dockerfile: crawler_service/Dockerfile
    container_name: crawler_service
    volumes:
      # Mount data directory to persist crawled articles
      - ./crawler_service/data:/app/crawler_service/data
      # Mount config for easy updates
      - ./crawler_service/config:/app/crawler_service/config
      # Mount shared utilities
      - ./shared:/app/shared
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
    networks:
      - tradesystem_network
    restart: unless-stopped
    # Uncomment to run on a schedule (requires cron or scheduler)
    # command: ["python", "-m", "crawler_service.main"]

  # Other services...
  # data_processor_service:
  #   build:
  #     context: .
  #     dockerfile: data_processor_service/Dockerfile
  #   ...

api_service:
    build: ./api_service
    container_name: tradesystem_api
    ports:
      - "8000:8000"
    volumes:
      - ./data_processor_service/final_predictions:/app/data_processor_service/final_predictions:ro
      - ./data_processor_service/sentiment_results:/app/data_processor_service/sentiment_results:ro
      - ./data_processor_service/financial_analysis_results:/app/data_processor_service/financial_analysis_results:ro
    environment:
      - NODE_ENV=production
    networks:
      - tradesystem_network

frontend_service:
    build: ./frontend_service
    container_name: tradesystem_frontend
    ports:
      - "3000:80"
    depends_on:
      - api_service
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    networks:
      - tradesystem_network

networks:
  tradesystem_network:
    driver: bridge

volumes:
  crawler_data:
    driver: local